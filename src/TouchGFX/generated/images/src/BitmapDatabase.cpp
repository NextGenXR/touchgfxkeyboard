// 4.21.1 0x87fe71d6
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_buttons_round_icon_button[]; // BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID = 0, Size: 60x60 pixels
extern const unsigned char image_blue_buttons_round_icon_button_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID = 1, Size: 60x60 pixels
extern const unsigned char image_icon_keyboard_even_row[]; // BITMAP_ICON_KEYBOARD_EVEN_ROW_ID = 2, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_highlighted[]; // BITMAP_ICON_KEYBOARD_HIGHLIGHTED_ID = 3, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_odd_row[]; // BITMAP_ICON_KEYBOARD_ODD_ROW_ID = 4, Size: 47x28 pixels
extern const unsigned char image_keyboard_background[]; // BITMAP_KEYBOARD_BACKGROUND_ID = 5, Size: 320x240 pixels
extern const unsigned char image_keyboard_key_delete_highlighted[]; // BITMAP_KEYBOARD_KEY_DELETE_HIGHLIGHTED_ID = 6, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_highlighted[]; // BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID = 7, Size: 26x40 pixels
extern const unsigned char image_keyboard_key_num_highlighted[]; // BITMAP_KEYBOARD_KEY_NUM_HIGHLIGHTED_ID = 8, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_shift_highlighted[]; // BITMAP_KEYBOARD_KEY_SHIFT_HIGHLIGHTED_ID = 9, Size: 56x40 pixels
extern const unsigned char image_keyboard_space_highlighted[]; // BITMAP_KEYBOARD_SPACE_HIGHLIGHTED_ID = 10, Size: 252x40 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_blue_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_keyboard_even_row, 0, 47, 28, 0, 0, 47, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_icon_keyboard_highlighted, 0, 47, 28, 0, 0, 47, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_icon_keyboard_odd_row, 0, 47, 28, 0, 0, 47, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_background, 0, 320, 240, 0, 0, 320, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 240, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_delete_highlighted, 0, 56, 40, 0, 0, 56, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_highlighted, 0, 26, 40, 0, 0, 26, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_num_highlighted, 0, 56, 40, 0, 0, 56, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_shift_highlighted, 0, 56, 40, 0, 0, 56, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_space_highlighted, 0, 252, 40, 0, 0, 252, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
